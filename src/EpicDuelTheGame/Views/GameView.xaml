<UserControl x:Class="EpicDuelTheGame.Views.GameView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:EpicDuelTheGame.Views"
			 xmlns:viewModels="clr-namespace:EpicDuelTheGame.ViewModels"
			 mc:Ignorable="d"
			 d:DesignHeight="800" d:DesignWidth="1280"
			 Background="PapayaWhip">

	<UserControl.Resources>
		<Style TargetType="TextBlock" x:Key="LoggerStyle">
			<Setter Property="FontFamily" Value="{StaticResource ChakraPetchRegular}"/>
			<Setter Property="FontSize" Value="24" />
			<Setter Property="Foreground" Value="Red" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<Style TargetType="Label" x:Key="HeroNameLabel">
			<Setter Property="FontFamily" Value="{StaticResource ChakraPetchMedium}"/>
			<Setter Property="FontSize" Value="20" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
		</Style>

		<Style TargetType="Label" x:Key="HeroTypeLabel">
			<Setter Property="FontFamily" Value="{StaticResource ChakraPetchRegular}"/>
			<Setter Property="FontSize" Value="12" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="VerticalAlignment" Value="Top" />
		</Style>

        <Style TargetType="TextBlock" x:Key="StatsTextBlock">
            <Setter Property="FontFamily" Value="{StaticResource ChakraPetchMedium}"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

		<Style TargetType="Button" x:Key="GameButton">
            <Setter Property="FontFamily" Value="{StaticResource ChakraPetchRegular}" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="TextBlock" x:Key="TurnCounterTextBlock">
            <Setter Property="FontFamily" Value="{StaticResource ChakraPetchRegular}"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

		<SolidColorBrush x:Key="HpProgressBar.Progress" Color="Red"/>
		<SolidColorBrush x:Key="ManaProgressBar.Progress" Color="DeepSkyBlue"/>
		<SolidColorBrush x:Key="ProgressBar.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="HpProgressBar.Border" Color="Red"/>
		<SolidColorBrush x:Key="ManaProgressBar.Border" Color="DeepSkyBlue"/>

		<Style x:Key="HpProgressBar" TargetType="{x:Type ProgressBar}">
			<Setter Property="Foreground" Value="{StaticResource HpProgressBar.Progress}"/>
			<Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource HpProgressBar.Border}"/>
			<Setter Property="BorderThickness" Value="2"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid x:Name="TemplateRoot">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Determinate"/>
									<VisualState x:Name="Indeterminate">
										<Storyboard RepeatBehavior="Forever">
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
												<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
												<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
											</DoubleAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
												<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
												<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
												<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
											</PointAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10"/>
							<Rectangle x:Name="PART_Track"/>
							<Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
								<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="10" RadiusY="10"/>
								<Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="10" RadiusY="10">
									<Rectangle.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Rectangle.RenderTransform>
								</Rectangle>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="LayoutTransform" TargetName="TemplateRoot">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsIndeterminate" Value="true">
								<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        <Style x:Key="ManaProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ManaProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ManaProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot" >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border 
								Background="{TemplateBinding Background}" 
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}" 
								CornerRadius="10" />
                            <Rectangle x:Name="PART_Track" Panel.ZIndex="0"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="10" RadiusY="10" Panel.ZIndex="1"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5" RadiusX="10" RadiusY="10">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CommonAnimatedGreenBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="CornerRadius" Value="18"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="0" Color="LightGreen"/>
                        <GradientStop Offset="0.5" Color="Green"/>
                        <GradientStop Offset="1" Color="#20b310"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Border.Loaded">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever" Timeline.DesiredFrameRate="60" AutoReverse="True">
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].Color"  
                                        To="#20b310" Duration="0:0:0.5"/>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].Color"  
                                        To="#1cfc03" Duration="0:0:1"/>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[2].Color"  
                                        To="LightGreen" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

                <Style x:Key="CommonAnimatedRedBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="CornerRadius" Value="18"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Offset="-0.1" Color="#e63030"/>
                        <GradientStop Offset="0.5" Color="#fc0303"/>
                        <GradientStop Offset="1.1" Color="#a11212"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Border.Loaded">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever" Timeline.DesiredFrameRate="60" AutoReverse="True">
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].Color"  
										 To="white" Duration="0:0:0.5"/>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].Color"  
										 To="red" Duration="0:0:1"/>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[2].Color"  
										 To="white" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="MenuSaveButtons">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{StaticResource ChakraPetchMedium}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="#606060"/>
            <Setter Property="BorderBrush" Value="#a0a0a0" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="TextBlock" x:Key="ProgressBarTextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource ChakraPetchMedium}" />
            <Setter Property="FontSize" Value="20" />
        </Style>

    </UserControl.Resources>

	<Grid RenderOptions.EdgeMode="Aliased">
		 <!--Ustawienie LinearGradientBrush jako tła strony--> 
		<!--<Grid.Background> 
			 <LinearGradientBrush StartPoint="0,0" EndPoint="1,1"> 
				 <GradientStop Offset="0" Color="#7b93a8"/> 
				 <GradientStop Offset="0.5" Color="#46cb29"/> 
				 <GradientStop Offset="1" Color="#19370a"/> 
			 </LinearGradientBrush> 
		 </Grid.Background> 		
		  <Grid.Triggers> 
			 <EventTrigger RoutedEvent="Grid.Loaded"> 
				 <BeginStoryboard> 
					 <Storyboard RepeatBehavior="Forever" Timeline.DesiredFrameRate="60" AutoReverse="True"> 
						 <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].Color"  
										 To="#3c4491" Duration="0:0:6"/> 
						 <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].Color"  
										 To="LightBlue" Duration="0:0:6"/> 
						 <ColorAnimation Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].Color"  
										 To="SkyBlue" Duration="0:0:6"/> 
					 </Storyboard> 
				 </BeginStoryboard> 
			 </EventTrigger> 
		 </Grid.Triggers>-->
        
        <Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="2*"/>
			<RowDefinition Height="6*"/>
			<RowDefinition Height="2*"/>
		</Grid.RowDefinitions>
		
		<!--USER COLUMN-->

		<Grid Grid.ColumnSpan="2" Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="6*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<Grid Grid.Column="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="18*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button Grid.Column="1" Grid.Row="1" Content="Menu" Command="{Binding NavigateToStartViewCommand}" Style="{StaticResource MenuSaveButtons}"/>


                <Button Grid.Column="1" Grid.Row="3" Content="Save" Command="{Binding SaveGameCommand}" Style="{StaticResource MenuSaveButtons}"/>
            </Grid>

			<TextBlock 
				Grid.Column="1" 
				Style="{StaticResource LoggerStyle}"
				Text="{Binding Log}"/>

            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="1" Grid.Row="1" Text="Tura" Style="{StaticResource TurnCounterTextBlock}"/>
                <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding NumberOfTurns}" Style="{StaticResource TurnCounterTextBlock}"/>
            </Grid>

        </Grid>
		<Grid Grid.Column="0" Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="2*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button Grid.Column="1" Grid.Row="0" Content="Atak słaby" Command="{Binding UserAttacksCommand}" CommandParameter="Weak"
                        Style="{StaticResource GameButton}" BorderBrush="Yellow" BorderThickness="3"/>

                <Button Grid.Column="1" Grid.Row="2" Content="Atak mocny" Command="{Binding UserAttacksCommand}" CommandParameter="Strong" Style="{StaticResource GameButton}" BorderBrush="Orange" BorderThickness="3"/>

                <Button Grid.Column="1" Grid.Row="4" Content="Ult" Command="{Binding UserAttacksCommand}" CommandParameter="Ult" Style="{StaticResource GameButton}" BorderBrush="Red" BorderThickness="3"/>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="14*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" BorderBrush="#c91a" BorderThickness="2" CornerRadius="15">
                    
                </Border>

                <Label Grid.Row="1" Style="{StaticResource HeroNameLabel}" Content="{Binding UserHero.Name}"/>

                <Label Grid.Row="2" Style="{StaticResource HeroTypeLabel}" Content="{Binding UserHero.HeroType}"/>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource CommonAnimatedGreenBorderStyle}" Panel.ZIndex="{Binding UserFirstSpellGreenZIndex}">
                    <Button Content="Spell 1" 
							Command="{Binding UserUseFirstSpellCommand}"
							CommandParameter="{Binding OpponentHero}"
                            Style="{StaticResource GameButton}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource CommonAnimatedRedBorderStyle}" Panel.ZIndex="{Binding UserFirstSpellRedZIndex}">
                    <Button Content="Spell 1" 
							Command="{Binding UserUseFirstSpellCommand}"
							CommandParameter="{Binding OpponentHero}"
                            Style="{StaticResource GameButton}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="2" Style="{StaticResource CommonAnimatedGreenBorderStyle}" Panel.ZIndex="{Binding UserSecondSpellGreenZIndex}">
                    <Button Content="Spell 2" 
							Command="{Binding UserUseSecondSpellCommand}"
							CommandParameter="{Binding OpponentHero}"
                            Style="{StaticResource GameButton}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="2" Style="{StaticResource CommonAnimatedRedBorderStyle}" Panel.ZIndex="{Binding UserSecondSpellRedZIndex}">
                    <Button Content="Spell 2" 
							Command="{Binding UserUseSecondSpellCommand}"
							CommandParameter="{Binding OpponentHero}"
                            Style="{StaticResource GameButton}"/>
                </Border>
            </Grid>
        </Grid>
		<Grid Grid.Column="0" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="32*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="1" Grid.Row="0">
                    <ProgressBar Style="{DynamicResource HpProgressBar}"  Name="UserHpBar"  Value="{Binding UserHero.Hp, Mode=OneWay}" Maximum="{Binding UserHero.MaxHp, Mode=OneWay}"/>
                    <TextBlock Style="{StaticResource ProgressBarTextBlock}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}HP {0}/{1}">
                                <Binding Path="Value" ElementName="UserHpBar" />
                                <Binding Path="Maximum" ElementName="UserHpBar" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
                <Grid Grid.Column="1" Grid.Row="2">
                    <ProgressBar
								Style="{DynamicResource ManaProgressBar}" 
								Name="UserManaBar" 
								Value="{Binding UserHero.Mana, Mode=OneWay}"
								Maximum="{Binding UserHero.MaxMana, Mode=OneWay}"/>

                    <TextBlock Style="{StaticResource ProgressBarTextBlock}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}MANA {0}/{1}">
                                <Binding Path="Value" ElementName="UserManaBar" />
                                <Binding Path="Maximum" ElementName="UserManaBar" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="17*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderBrush="Black" BorderThickness="3" CornerRadius="10" Background="Transparent">
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="8*"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>              
                        
                        <!--FIRST ROW-->

                        <Button
                            Grid.Column="0" 
                            Background="Transparent" 
                            Command="{Binding UserUpIntelligenceCommand}"
                            CommandParameter="{Binding OpponentHero}"
                            BorderThickness="0"
                            BorderBrush="Black">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="10, 0, 0 ,0"/>
                                </Style>
                            </Button.Resources>
                            <StackPanel
								HorizontalAlignment="Center" 
								VerticalAlignment="Center">
                                <TextBlock 
									Text="Inteligencja" 
									Style="{StaticResource StatsTextBlock}"/>
                                <TextBlock
                                    FontFamily="{StaticResource ChakraPetchMedium}"
									Foreground="red"
									Text="zwięsz" 
									FontSize="12" 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>

                        <Border Grid.Column="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 0, 0, 0"/>
                                    <Setter Property="CornerRadius" Value="0, 10, 0 ,0"/>
                                </Style>
                            </Border.Resources>

                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding UserHero.Intelligence}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <!--SECOND ROW-->

                        <Border Grid.Column="0" Grid.Row="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="0, 3, 0, 3"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="Siła"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <Border Grid.Column="1" Grid.Row="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 3, 0, 3"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding UserHero.Strength}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <!--THIRD ROW-->

                        <Border Grid.Column="0" Grid.Row="2">
                            <TextBlock 
                                Grid.Column="1" 
                                Text="Zwinnosc"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <Border Grid.Column="1" Grid.Row="2">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 0, 0, 0"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding UserHero.Dexterity}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

		<!--OPPONENET COLMUN-->

		<Grid Grid.Column="1" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
        </Grid>
		<Grid Grid.Column="1" Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="2*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid Grid.Column="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="18*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="14*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="1" Style="{StaticResource HeroNameLabel}" Content="{Binding OpponentHero.Name}"/>

                <Label Grid.Row="2" Style="{StaticResource HeroTypeLabel}" Content="{Binding OpponentHero.HeroType}"/>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="18*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource CommonAnimatedGreenBorderStyle}" Panel.ZIndex="{Binding OpponentFirstSpellGreenZIndex}">
                    <TextBlock Text="Spell 1" Style="{StaticResource StatsTextBlock}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource CommonAnimatedRedBorderStyle}" Panel.ZIndex="{Binding OpponentFirstSpellRedZIndex}">
                    <TextBlock Text="Spell 1" Style="{StaticResource StatsTextBlock}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="2" Style="{StaticResource CommonAnimatedGreenBorderStyle}" Panel.ZIndex="{Binding OpponentSecondSpellGreenZIndex}">
                    <TextBlock Text="Spell 2" Style="{StaticResource StatsTextBlock}"/>
                </Border>

                <Border Grid.Column="1" Grid.Row="2" Style="{StaticResource CommonAnimatedRedBorderStyle}" Panel.ZIndex="{Binding OpponentSecondSpellRedZIndex}">
                    <TextBlock Text="Spell 2" Style="{StaticResource StatsTextBlock}"/>

                </Border>
            </Grid>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="14*"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="0.45*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="32*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="1" Grid.Row="0">
                    <ProgressBar 
								Name="OpponentHpBar" 
								Style="{DynamicResource HpProgressBar}" 
								Value="{Binding OpponentHero.Hp, Mode=OneWay}" 
								Maximum="{Binding OpponentHero.MaxHp, Mode=OneWay}"/>
                    <TextBlock Style="{StaticResource ProgressBarTextBlock}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}HP {0}/{1}">
                                <Binding Path="Value" ElementName="OpponentHpBar"/>
                                <Binding Path="Maximum" ElementName="OpponentHpBar" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="2">
                    <ProgressBar
								 Name="OpponentManaBar"  
								 Style="{DynamicResource ManaProgressBar}" 
								 Value="{Binding OpponentHero.Mana, Mode=OneWay}"                             
								 Maximum="{Binding OpponentHero.MaxMana,Mode=OneWay}"/>
                    <TextBlock Style="{StaticResource ProgressBarTextBlock}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}MANA {0}/{1}">
                                <Binding Path="Value" ElementName="OpponentManaBar" />
                                <Binding Path="Maximum" ElementName="OpponentManaBar" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="17*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderBrush="Black" BorderThickness="3" CornerRadius="10" Background="Transparent">
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="8*"/>
                            <RowDefinition Height="8*"/>
                        </Grid.RowDefinitions>

                        <!--FIRST ROW-->

                        <Border Grid.Column="0">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="Inteligencja"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <Border Grid.Column="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 0, 0, 0"/>
                                    <Setter Property="CornerRadius" Value="0, 10, 0 ,0"/>
                                </Style>
                            </Border.Resources>

                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding OpponentHero.Intelligence}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <!--SECOND ROW-->

                        <Border Grid.Column="0" Grid.Row="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="0, 3, 0, 3"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="Siła"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <Border Grid.Column="1" Grid.Row="1">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 3, 0, 3"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding OpponentHero.Strength}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <!--THIRD ROW-->

                        <Border Grid.Column="0" Grid.Row="2">
                            <TextBlock 
                                Grid.Column="1" 
                                Text="Zwinnosc"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>

                        <Border Grid.Column="1" Grid.Row="2">
                            <Border.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="3, 0, 0, 0"/>
                                </Style>
                            </Border.Resources>
                            <TextBlock 
                                Grid.Column="1" 
                                Text="{Binding OpponentHero.Dexterity}"
                                Style="{StaticResource StatsTextBlock}"/>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
